rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // admin 컬렉션은 읽기만 허용
    match /admin/{document=**} {
      allow read: if true;
      allow write: if false;
    }
    
    // yearlyThemes 컬렉션 추가
    match /yearlyThemes/{document=**} {
      allow read: if true;  // 모든 사용자가 읽기 가능
      allow write: if exists(/databases/$(database)/documents/admin/settings);  // 관리자 권한이 있을 때 쓰기 가능
    }
    
    // prayerRequests 컬렉션 - 핀 기능과 삭제 기능을 위해 규칙 업데이트
    match /prayerRequests/{document=**} {
      allow read: if true;
      
      // 생성 규칙: 필수 필드들이 있는지 확인
      allow create: if 
        exists(/databases/$(database)/documents/admin/settings) &&
        request.time != null &&
        request.resource.data.keys().hasAll(['prayerItems', 'updatedAt', 'createdAt']) &&
        request.resource.data.prayerItems is list &&
        // 핀 관련 필드는 선택적
        (!('isPinned' in request.resource.data) || request.resource.data.isPinned is bool) &&
        (!('pinnedAt' in request.resource.data) || request.resource.data.pinnedAt != null);
      
      // 수정 규칙: 기존 문서가 있고 필요한 필드들이 유효한지 확인
      allow update: if 
        exists(/databases/$(database)/documents/admin/settings) &&
        request.time != null &&
        resource != null &&
        // 필수 필드 확인
        request.resource.data.keys().hasAny(['prayerItems', 'updatedAt']) &&
        // prayerItems가 있다면 배열이어야 함
        (!('prayerItems' in request.resource.data) || request.resource.data.prayerItems is list) &&
        // 핀 관련 필드 유효성 검사
        (!('isPinned' in request.resource.data) || request.resource.data.isPinned is bool) &&
        (!('pinnedAt' in request.resource.data) || request.resource.data.pinnedAt != null);
      
      // 삭제 규칙: 관리자 권한만 확인 (request.resource.data는 삭제시 null이므로 제외)
      allow delete: if 
        exists(/databases/$(database)/documents/admin/settings) &&
        resource != null;
    }
    
    // voices 컬렉션 추가
    match /voices/{document} {
      allow read, write: if true;  // 테스트를 위해 모든 작업 허용
    }
  }
} 